[internal]
; Dialing users (1001-1009)
exten => 1001,1,Dial(SIP/1001)
exten => 1002,1,Dial(SIP/1002)
exten => 1003,1,Dial(SIP/1003)
exten => 1004,1,Dial(SIP/1004)
exten => 1005,1,Dial(SIP/1005)
exten => 1008,1,Dial(SIP/1008)

; Conference Room (Extension 2000)
exten => 2000,1,Answer()
same => n,ConfBridge(2000)
same => n,Hangup()

; Welcome Note Playback (Extension 1000)
exten => 1000,1,Answer()
same => n,Wait(5)
same => n,Playback(welcome1)
same => n,Hangup()

; Define the messages context for receiving SMS
; This context handles SMS messages, ensure it doesnâ€™t conflict with the internal context.

exten => _.,1,NoOp(SMS receiving dialplan invoked)
exten => _.,n,NoOp(To: ${MESSAGE(to)})
exten => _.,n,NoOp(From: ${MESSAGE(from)})
exten => _.,n,NoOp(Body: ${MESSAGE(body)})

; Ensure that MESSAGE(to) has the correct format
exten => _.,n,Set(ACTUALTO=${CUT(MESSAGE(to),@,1)})

; Send message to the ACTUALTO address
exten => _.,n,NoOp(Sending message to: ${ACTUALTO})

; Check if MESSAGE(from) and ACTUALTO are valid before sending
exten => _.,n,GotoIf($["${ACTUALTO}" != ""]?sendmsg:invalidto)

exten => _.,n(sendmsg),MessageSend(${ACTUALTO},${MESSAGE(from)})
exten => _.,n,NoOp(Send status is: ${MESSAGE_SEND_STATUS})

; Check the send status and handle failure
exten => _.,n,GotoIf($["${MESSAGE_SEND_STATUS}" != "SUCCESS"]?sendfailedmsg)

exten => _.,n,Hangup()

; Handle failed messaging
exten => _.,n(sendfailedmsg),Set(ME_1=${CUT(MESSAGE(from),<,2)})
exten => _.,n,Set(ACTUALFROM=${CUT(ME_1,@,1)})
exten => _.,n,MessageSend(${ACTUALFROM},ServiceCenter)

exten => _.,n,Hangup()

; Handle invalid "to" address
exten => _.,n(invalidto),NoOp(Invalid "To" address: ${ACTUALTO})
exten => _.,n,Hangup()

